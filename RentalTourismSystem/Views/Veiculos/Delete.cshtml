@model RentalTourismSystem.Models.Veiculo

@{
    ViewData["Title"] = "Excluir Veículo";
    var temImpedimentos = ViewBag.Impedimentos != null && ((List<string>)ViewBag.Impedimentos).Any();
    var podeExcluir = !temImpedimentos;
}

<div class="container-fluid py-4">
    <div class="row mb-4">
        <div class="col-12">
            <div class="page-header-modern">
                <div>
                    <h2 class="page-title">
                        <i class="fas fa-exclamation-triangle text-danger me-2"></i>Excluir Veículo
                    </h2>
                    <p class="page-subtitle text-muted">
                        Avalie cuidadosamente antes de prosseguir com a exclusão
                    </p>
                </div>
                <div class="page-actions">
                    <span class="badge bg-warning fs-6">
                        <i class="fas fa-shield-alt me-1"></i>Ação Crítica
                    </span>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <!-- Conteúdo Principal -->
        <div class="col-lg-8">
            <!-- Card Principal do Veículo -->
            <div class="card border-danger mb-4">
                <div class="card-header bg-danger text-white">
                    <h5 class="mb-0">
                        <i class="fas fa-car me-2"></i>Dados do Veículo
                    </h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="detail-item">
                                <i class="fas fa-id-card text-primary"></i>
                                <div>
                                    <small class="text-muted d-block">Placa</small>
                                    <strong class="fs-5">@Model.Placa</strong>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="detail-item">
                                <i class="fas fa-car text-success"></i>
                                <div>
                                    <small class="text-muted d-block">Veículo</small>
                                    <strong>@Model.Marca @Model.Modelo</strong>
                                </div>
                            </div>
                        </div>
                    </div>

                    <hr class="my-3">

                    <div class="row">
                        <div class="col-md-4">
                            <div class="detail-item-sm">
                                <small class="text-muted">Ano</small>
                                <div><strong>@Model.Ano</strong></div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="detail-item-sm">
                                <small class="text-muted">Cor</small>
                                <div><strong>@Model.Cor</strong></div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="detail-item-sm">
                                <small class="text-muted">Diária</small>
                                <div><strong>@Model.ValorDiaria.ToString("C")</strong></div>
                            </div>
                        </div>
                    </div>

                    <hr class="my-3">

                    <div class="row">
                        <div class="col-md-6">
                            <div class="detail-item-sm">
                                <small class="text-muted">Status Atual</small>
                                <div>
                                    @{
                                        var badgeClass = Model.StatusCarro.Status switch
                                        {
                                            "Disponível" => "bg-success",
                                            "Alugado" => "bg-danger",
                                            "Manutenção" => "bg-warning text-dark",
                                            _ => "bg-secondary"
                                        };
                                    }
                                    <span class="badge @badgeClass">@Model.StatusCarro.Status</span>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="detail-item-sm">
                                <small class="text-muted">Agência</small>
                                <div><strong>@Model.Agencia.Nome</strong></div>
                            </div>
                        </div>
                    </div>

                    @* Veículo não possui campo Observações *@
                </div>
            </div>

            <!-- Card de Histórico -->
            @if (Model.Locacoes.Any())
            {
                <div class="card border-info mb-4">
                    <div class="card-header bg-info text-white">
                        <h6 class="mb-0">
                            <i class="fas fa-history me-1"></i>Histórico de Locações
                        </h6>
                    </div>
                    <div class="card-body">
                        <div class="alert alert-info">
                            <i class="fas fa-info-circle me-1"></i>
                            <strong>Este veículo possui @Model.Locacoes.Count locação(ões) registrada(s).</strong>
                            <br>
                            Ao excluir, o histórico será mantido mas sem vínculo ao veículo.
                        </div>

                        @{
                            var locacoesAtivas = Model.Locacoes.Where(l => l.DataDevolucaoReal == null).ToList();
                            var locacoesFinalizadas = Model.Locacoes.Where(l => l.DataDevolucaoReal != null).OrderByDescending(l => l.DataRetirada).Take(5).ToList();
                        }

                        @if (locacoesAtivas.Any())
                        {
                            <div class="alert alert-danger">
                                <h6 class="alert-heading">
                                    <i class="fas fa-exclamation-triangle me-1"></i>Locações Ativas
                                </h6>
                                @foreach (var locacao in locacoesAtivas)
                                {
                                    <div class="border-top pt-2 mt-2">
                                        <strong>Locação #@locacao.Id</strong> - @locacao.Cliente.Nome
                                        <br>
                                        <small>Retirada: @locacao.DataRetirada.ToString("dd/MM/yyyy")</small>
                                        <br>
                                        <small>Previsão Devolução: @locacao.DataDevolucao.ToString("dd/MM/yyyy")</small>
                                    </div>
                                }
                            </div>
                        }

                        @if (locacoesFinalizadas.Any())
                        {
                            <h6 class="mt-3 mb-2">Últimas Locações Finalizadas</h6>
                            <div class="table-responsive">
                                <table class="table table-sm table-hover">
                                    <thead>
                                        <tr>
                                            <th>ID</th>
                                            <th>Cliente</th>
                                            <th>Período</th>
                                            <th>Valor</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var locacao in locacoesFinalizadas)
                                        {
                                            <tr>
                                                <td>#@locacao.Id</td>
                                                <td>@locacao.Cliente.Nome</td>
                                                <td>
                                                    <small>
                                                        @locacao.DataRetirada.ToString("dd/MM/yyyy") -
                                                        @locacao.DataDevolucaoReal?.ToString("dd/MM/yyyy")
                                                    </small>
                                                </td>
                                                <td>@locacao.ValorTotal.ToString("C")</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        }
                    </div>
                </div>
            }

            <!-- Card de Alertas -->
            <div class="card mb-4">
                <div class="card-header bg-warning text-dark">
                    <h6 class="mb-0">
                        <i class="fas fa-exclamation-circle me-1"></i>
                        @(temImpedimentos ? "Impedimentos para Exclusão" : "Avisos Importantes")
                    </h6>
                </div>
                <div class="card-body">
                    @if (temImpedimentos)
                    {
                        <div class="alert alert-danger">
                            <h6 class="alert-heading">
                                <i class="fas fa-ban me-1"></i>Exclusão Bloqueada
                            </h6>
                            <p>Este veículo não pode ser excluído devido aos seguintes impedimentos:</p>
                            <ul class="mb-0">
                                @foreach (var impedimento in (List<string>)ViewBag.Impedimentos)
                                {
                                    <li><strong>@impedimento</strong></li>
                                }
                            </ul>
                        </div>

                        <div class="alert alert-info">
                            <h6 class="alert-heading">
                                <i class="fas fa-lightbulb me-1"></i>Como Proceder
                            </h6>
                            <ul class="mb-0">
                                <li>Finalize todas as locações ativas</li>
                                <li>Aguarde o processamento das devoluções</li>
                                <li>Após resolver os impedimentos, você poderá excluir o veículo</li>
                            </ul>
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-danger">
                            <h6 class="alert-heading">
                                <i class="fas fa-exclamation-triangle me-1"></i>Impactos da Exclusão
                            </h6>
                            <ul class="mb-0">
                                <li>Todos os dados do veículo serão <strong>perdidos permanentemente</strong></li>
                                <li>O histórico de locações será mantido, mas sem vínculo ao veículo</li>
                                <li>Relatórios podem apresentar inconsistências</li>
                                <li>Esta ação não pode ser revertida</li>
                            </ul>
                        </div>
                    }
                </div>
            </div>

            <!-- Botões de Ação -->
            <div class="card">
                <div class="card-body">
                    <div class="d-flex gap-2 justify-content-between align-items-center">
                        <div class="action-buttons">
                            @if (podeExcluir)
                            {
                                <form asp-action="Delete" method="post" id="formExclusaoFinal" class="d-inline">
                                    <input type="hidden" asp-for="Id" />
                                    <button type="button" class="btn btn-danger hover-lift" id="btnConfirmarExclusao">
                                        <i class="fas fa-trash-alt me-1"></i>Sim, Excluir Permanentemente
                                    </button>
                                </form>
                            }
                            else
                            {
                                <button type="button" class="btn btn-danger" disabled>
                                    <i class="fas fa-ban me-1"></i>Exclusão Não Permitida
                                </button>
                            }
                        </div>

                        <div class="navigation-buttons">
                            <a asp-action="Details" asp-route-id="@Model.Id" class="btn btn-secondary">
                                <i class="fas fa-arrow-left me-1"></i>Voltar aos Detalhes
                            </a>
                            <a asp-action="Index" class="btn btn-outline-secondary">
                                <i class="fas fa-list me-1"></i>Lista de Veículos
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Sidebar Direita -->
        <div class="col-lg-4">
            <!-- Card de Alternativas -->
            <div class="card border-info mb-4">
                <div class="card-header bg-info text-white">
                    <h6 class="mb-0">
                        <i class="fas fa-lightbulb me-1"></i>Alternativas Recomendadas
                    </h6>
                </div>
                <div class="card-body">
                    @if (temImpedimentos)
                    {
                        <div class="alert alert-warning small">
                            <i class="fas fa-ban me-1"></i>
                            <strong>Exclusão bloqueada</strong> por locações ativas.
                        </div>
                    }

                    <div class="d-grid gap-2">
                        <button type="button" class="btn btn-outline-warning btn-sm" onclick="alterarStatus(@Model.Id, 'Manutenção')">
                            <i class="fas fa-wrench me-1"></i>Marcar como Manutenção
                        </button>

                        <button type="button" class="btn btn-outline-secondary btn-sm" onclick="alterarStatus(@Model.Id, 'Indisponível')">
                            <i class="fas fa-ban me-1"></i>Marcar como Indisponível
                        </button>

                        <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-outline-primary btn-sm">
                            <i class="fas fa-edit me-1"></i>Editar Informações
                        </a>

                        <button type="button" class="btn btn-outline-info btn-sm" onclick="transferirAgencia()">
                            <i class="fas fa-exchange-alt me-1"></i>Transferir para Outra Agência
                        </button>
                    </div>

                    <hr class="my-3">

                    <div class="small text-muted">
                        <i class="fas fa-info-circle me-1"></i>
                        <strong>Dica:</strong> Considere marcar o veículo como indisponível ao invés de excluí-lo.
                        Isso mantém o histórico e permite reativação futura.
                    </div>
                </div>
            </div>

            <!-- Card de Estatísticas -->
            @if (Model.Locacoes.Any())
            {
                <div class="card border-secondary">
                    <div class="card-header bg-secondary text-white">
                        <h6 class="mb-0">
                            <i class="fas fa-chart-bar me-1"></i>Estatísticas do Veículo
                        </h6>
                    </div>
                    <div class="card-body">
                        @{
                            var totalLocacoes = Model.Locacoes.Count;
                            var locacoesFinalizadasStats = Model.Locacoes.Where(l => l.DataDevolucaoReal != null).ToList();
                            var receitaTotal = locacoesFinalizadasStats.Sum(l => l.ValorTotal);
                            var diasLocados = locacoesFinalizadasStats.Sum(l => (l.DataDevolucaoReal!.Value - l.DataRetirada).Days);
                        }

                        <div class="stat-item mb-3">
                            <small class="text-muted">Total de Locações</small>
                            <h4 class="mb-0 text-primary">@totalLocacoes</h4>
                        </div>

                        <div class="stat-item mb-3">
                            <small class="text-muted">Receita Total Gerada</small>
                            <h4 class="mb-0 text-success">@receitaTotal.ToString("C")</h4>
                        </div>

                        <div class="stat-item mb-3">
                            <small class="text-muted">Total de Dias Locados</small>
                            <h4 class="mb-0 text-info">@diasLocados dias</h4>
                        </div>

                        @if (locacoesFinalizadasStats.Any())
                        {
                            var mediaValor = receitaTotal / locacoesFinalizadasStats.Count;
                            <div class="stat-item">
                                <small class="text-muted">Valor Médio por Locação</small>
                                <h5 class="mb-0 text-warning">@mediaValor.ToString("C")</h5>
                            </div>
                        }
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<!-- Modal de Confirmação Final -->
@if (podeExcluir)
{
    <div class="modal fade" id="modalConfirmacaoFinal" tabindex="-1" data-bs-backdrop="static">
        <div class="modal-dialog modal-lg">
            <div class="modal-content border-danger">
                <div class="modal-header bg-danger text-white">
                    <h5 class="modal-title">
                        <i class="fas fa-exclamation-triangle me-2"></i>CONFIRMAÇÃO FINAL DE EXCLUSÃO
                    </h5>
                </div>
                <div class="modal-body">
                    <div class="text-center mb-4">
                        <i class="fas fa-exclamation-triangle fa-4x text-danger mb-3"></i>
                        <h4 class="text-danger">ÚLTIMA CHANCE!</h4>
                        <p class="lead">Você está prestes a excluir permanentemente:</p>
                    </div>

                    <div class="alert alert-danger text-center">
                        <h5 class="mb-3">
                            <strong>@Model.Marca @Model.Modelo</strong><br>
                            <code>Placa: @Model.Placa</code>
                        </h5>

                        @if (Model.Locacoes.Any())
                        {
                            var totalLocacoes = Model.Locacoes.Count;
                            var receitaTotal = Model.Locacoes.Where(l => l.DataDevolucaoReal != null).Sum(l => l.ValorTotal);
                            <div class="border-top pt-3">
                                <p class="mb-1">
                                    <strong>@totalLocacoes locações</strong> no valor de <strong>@receitaTotal.ToString("C")</strong>
                                </p>
                                <p class="mb-0 small text-muted">
                                    Todo o histórico será afetado
                                </p>
                            </div>
                        }
                    </div>

                    <div class="confirmations-section">
                        <h6 class="text-center mb-3">Você deve confirmar TODOS os itens abaixo:</h6>

                        <div class="form-check mb-2">
                            <input class="form-check-input" type="checkbox" id="confirmData">
                            <label class="form-check-label" for="confirmData">
                                Revisei todos os dados do veículo acima
                            </label>
                        </div>
                        <div class="form-check mb-2">
                            <input class="form-check-input" type="checkbox" id="confirmBackup">
                            <label class="form-check-label" for="confirmBackup">
                                Fiz backup dos dados necessários (se aplicável)
                            </label>
                        </div>
                        <div class="form-check mb-2">
                            <input class="form-check-input" type="checkbox" id="confirmNoActive">
                            <label class="form-check-label" for="confirmNoActive">
                                Confirmei que não há locações ativas
                            </label>
                        </div>
                        <div class="form-check mb-2">
                            <input class="form-check-input" type="checkbox" id="confirmUndo">
                            <label class="form-check-label" for="confirmUndo">
                                Entendo que esta ação <strong>NÃO PODE ser desfeita</strong>
                            </label>
                        </div>
                        <div class="form-check mb-3">
                            <input class="form-check-input" type="checkbox" id="confirmResponsibility">
                            <label class="form-check-label" for="confirmResponsibility">
                                Assumo total responsabilidade por esta exclusão
                            </label>
                        </div>
                    </div>

                    <div class="final-confirmation bg-dark text-white p-3 rounded">
                        <h6 class="text-center mb-3">CONFIRMAÇÃO TEXTUAL OBRIGATÓRIA</h6>
                        <p class="text-center mb-2 small">
                            Digite <strong>"EXCLUIR VEICULO"</strong> para confirmar:
                        </p>
                        <input type="text" id="confirmationText" class="form-control text-center"
                               placeholder="Digite aqui a confirmação exata..." autocomplete="off">
                    </div>
                </div>
                <div class="modal-footer justify-content-between">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                        <i class="fas fa-times me-1"></i>Cancelar - Manter Veículo
                    </button>
                    <button type="button" class="btn btn-danger" id="btnConfirmarFinalModal" disabled>
                        <i class="fas fa-trash-alt me-1"></i>EXCLUIR PERMANENTEMENTE
                    </button>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    <script>
        $(document).ready(function() {
            // Configurar tooltips
            initializeTooltips();

            @if (podeExcluir)
            {
                    <text>
                    // Configurar sistema de exclusão corrigido
                    setupDeleteSystem();
                    </text>
            }
        });

        @if (podeExcluir)
        {
                <text>
                // SISTEMA DE EXCLUSÃO CORRIGIDO - IGUAL AO DE CLIENTES
                function setupDeleteSystem() {
                    const btnConfirmarExclusao = document.getElementById('btnConfirmarExclusao');
                    const modalConfirmacao = document.getElementById('modalConfirmacaoFinal');
                    const btnConfirmarFinalModal = document.getElementById('btnConfirmarFinalModal');
                    const formExclusaoFinal = document.getElementById('formExclusaoFinal');

                    // Checkboxes de confirmação
                    const checkboxes = ['#confirmData', '#confirmBackup', '#confirmNoActive', '#confirmUndo', '#confirmResponsibility'];
                    const confirmationText = document.getElementById('confirmationText');
                    const textoEsperado = 'EXCLUIR VEICULO';

                    // 1. Botão inicial - abrir modal (SEM LOADING)
                    if (btnConfirmarExclusao) {
                        btnConfirmarExclusao.addEventListener('click', function(e) {
                            e.preventDefault();
                            e.stopPropagation();

                            // Resetar modal
                            resetModal();

                            // Mostrar modal
                            const modal = new bootstrap.Modal(modalConfirmacao);
                            modal.show();
                        });
                    }

                    // 2. Monitorar mudanças para habilitar botão final
                    function verificarConfirmacoes() {
                        const todosChecked = checkboxes.every(cb => document.querySelector(cb)?.checked);
                        const textoCorreto = confirmationText.value.trim().toUpperCase() === textoEsperado;

                        btnConfirmarFinalModal.disabled = !(todosChecked && textoCorreto);
                    }

                    // Eventos de mudança
                    checkboxes.forEach(cb => {
                        const checkbox = document.querySelector(cb);
                        if (checkbox) {
                            checkbox.addEventListener('change', verificarConfirmacoes);
                        }
                    });

                    if (confirmationText) {
                        confirmationText.addEventListener('input', verificarConfirmacoes);
                    }

                    // 3. Botão final - executar exclusão COM LOADING
                    if (btnConfirmarFinalModal) {
                        btnConfirmarFinalModal.addEventListener('click', function(e) {
                            e.preventDefault();

                            if (this.disabled) return;

                            // Fechar modal
                            const modal = bootstrap.Modal.getInstance(modalConfirmacao);
                            if (modal) {
                                modal.hide();
                            }

                            // Executar exclusão com loading
                            executarExclusaoComLoading();
                        });
                    }

                    function resetModal() {
                        // Limpar checkboxes
                        checkboxes.forEach(cb => {
                            const checkbox = document.querySelector(cb);
                            if (checkbox) checkbox.checked = false;
                        });

                        // Limpar texto
                        if (confirmationText) {
                            confirmationText.value = '';
                        }

                        // Desabilitar botão
                        btnConfirmarFinalModal.disabled = true;
                    }

                    function executarExclusaoComLoading() {
                        // Mostrar loading específico para exclusão
                        window.RentalTourismSystem.LoadingOverlaySystem.show('body', {
                            message: 'Excluindo veículo...'
                        });

                        // Delay para UX e depois enviar
                        setTimeout(() => {
                            if (formExclusaoFinal) {
                                console.log('Enviando formulário de exclusão...');
                                formExclusaoFinal.submit();
                            }
                        }, 1500);
                    }
                }
                </text>
        }

        // Alterar status do veículo
        async function alterarStatus(veiculoId, novoStatus) {
            const confirmacao = confirm(`Deseja alterar o status do veículo para "${novoStatus}"?`);

            if (confirmacao) {
                try {
                    // Mostrar loading
                    window.RentalTourismSystem.LoadingOverlaySystem.show('body', {
                        message: 'Alterando status...'
                    });

                    // Simular mapeamento de status
                    const statusIds = {
                        'Disponível': 1,
                        'Alugado': 2,
                        'Manutenção': 3,
                        'Indisponível': 4
                    };

                    const formData = new FormData();
                    formData.append('id', veiculoId);
                    formData.append('novoStatusId', statusIds[novoStatus]);
                    formData.append('motivo', `Alteração via tela de exclusão`);

                    const response = await fetch(`@Url.Action("AlterarStatus", "Veiculos")`, {
                        method: 'POST',
                        body: formData
                    });

                    if (response.ok) {
                        const resultado = await response.json();

                        if (resultado.success) {
                            window.RentalTourismSystem.NotificationSystem.success(resultado.message + ' Redirecionando...');
                            setTimeout(() => {
                                window.location.href = `@Url.Action("Details", "Veiculos")/${veiculoId}`;
                            }, 1500);
                        } else {
                            window.RentalTourismSystem.NotificationSystem.error(resultado.message);
                            window.RentalTourismSystem.LoadingOverlaySystem.hide();
                        }
                    } else {
                        window.RentalTourismSystem.NotificationSystem.error('Erro ao alterar status do veículo');
                        window.RentalTourismSystem.LoadingOverlaySystem.hide();
                    }
                } catch (error) {
                    console.error('Erro:', error);
                    window.RentalTourismSystem.NotificationSystem.error('Erro ao processar alteração');
                    window.RentalTourismSystem.LoadingOverlaySystem.hide();
                }
            }
        }

        // Transferir para outra agência
        function transferirAgencia() {
            window.RentalTourismSystem.NotificationSystem.info('Funcionalidade de transferência em desenvolvimento. Use a edição para alterar a agência.');
        }
    </script>
}